name: Windows Build

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build:
    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v2
    
    - name: Set up MSYS2
      uses: msys2/setup-msys2@v2
      with:
        update: true
        install: > 
          mingw-w64-x86_64-gcc
          make
    
    - name: Add MSYS2 to PATH
      run: echo "C:/msys64/mingw64/bin" >> $GITHUB_PATH
    
    - name: Build DLL
      run: |
        make CC=x86_64-w64-mingw32-gcc -f Makefile platform=windows
    
    - name: Create test_loader.c
      run: |
        echo "#include <windows.h>" > test_loader.c
        echo "#include <stdio.h>" >> test_loader.c
        echo "typedef void (*lr_input_device_set_func)(const uint32_t, const uint32_t);" >> test_loader.c
        echo "int main() {" >> test_loader.c
        echo "    HINSTANCE dll = LoadLibrary(\\"opera_libretro.dll\\");" >> test_loader.c
        echo "    if (!dll) { printf(\\"Failed to load DLL\\n\\"); return 1; }" >> test_loader.c
        echo "    lr_input_device_set_func lr_input_device_set = (lr_input_device_set_func)GetProcAddress(dll, \\"lr_input_device_set\\");" >> test_loader.c
        echo "    if (!lr_input_device_set) { printf(\\"Function not found in DLL\\n\\"); FreeLibrary(dll); return 1; }" >> test_loader.c
        echo "    lr_input_device_set(0, 1);" >> test_loader.c
        echo "    FreeLibrary(dll);" >> test_loader.c
        echo "    return 0;" >> test_loader.c
        echo "}" >> test_loader.c
    
    - name: Compile test_loader
      run: gcc -o test_loader.exe test_loader.c -L. -lopera_libretro
    
    - name: Run test_loader
      run: ./test_loader.exe
    
    - name: Upload artifact
      uses: actions/upload-artifact@v3
      with:
        name: build-output
        path: D:/a/opera-libretro/opera-libretro/opera_libretro.dll
